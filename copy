// Функція для перевірки, чи блок має один із бажаних стилів
const hasCustomListStyle = (block) => {
    if (!block || !block.attributes || !block.attributes.className) {
        return false;
    }

    const { className } = block.attributes;
    return (
        className.includes('is-style-list-with-small-dots') ||
        className.includes('is-style-list-body-style') ||
        className.includes('is-style-bullet-list')
    );
};

// Додаємо панель для вибору кольору, якщо батьківський блок core/list має потрібний стиль
wp.hooks.addFilter(
    'editor.BlockEdit',
    'custom/list-item-color-control',
    (BlockEdit) => (props) => {
        const { attributes, setAttributes, name, clientId } = props;

        // Перевіряємо, чи це core/list-item
        if (name !== 'core/list-item') {
            return <BlockEdit {...props} />;
        }

        // Отримуємо батьківський блок core/list
        const parentBlocks = wp.data.select('core/block-editor').getBlockParents(clientId);
        const parentBlock = parentBlocks.length ? wp.data.select('core/block-editor').getBlock(parentBlocks[0]) : null;

        // Якщо батьківський блок не має потрібного стилю, не показуємо вибір кольору
        if (!parentBlock || !hasCustomListStyle(parentBlock)) {
            return <BlockEdit {...props} />;
        }

        const { bulletColor } = attributes;

        return (
            <>
                <BlockEdit {...props} />
                <wp.blockEditor.InspectorControls>
                    <wp.components.PanelBody title="Bullet Color" initialOpen={true}>
                        <wp.components.ColorPalette
                            value={bulletColor}
                            onChange={(color) => setAttributes({ bulletColor: color })}
                        />
                    </wp.components.PanelBody>
                </wp.blockEditor.InspectorControls>
            </>
        );
    }
);

// Додаємо кастомний клас для bulletColor
wp.hooks.addFilter(
    'blocks.getSaveContent.extraProps',
    'custom/list-item-bullet-color-props',
    (extraProps, blockType, attributes) => {
        if (blockType.name === 'core/list-item' && attributes.bulletColor) {
            extraProps.className = `${extraProps.className} has-bullet-color`;
            extraProps.style = {
                ...extraProps.style,
                '--bullet-color': attributes.bulletColor,
            };
        }
        return extraProps;
    }
);